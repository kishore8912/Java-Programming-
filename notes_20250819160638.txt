08.19 3:47â€¯PM
Day-10
Basic Array Operations
Array Access and Traversal
import java.util.Scanner;
class Array {
 public static void main(String[] args) {
 int a[] = {10, 20, 30, 40, 50, 60, 70, 80, 90, 100};
 
 // Accessing specific element
 System.out.println(a[2]); // Output: 30
 // Print all elements using traditional for loop
 for (int i = 0; i < a.length; i++) {
 System.out.println(a[i]);
 }
 
 // Print all elements using enhanced for loop
 for (int element : a) {
 System.out.println(element);
 }
 }
}

Array Rotation Programs
Move First Element to Last (Without Swap)
import java.util.Scanner;
class ArrayRotation {
 public static void main(String[] args) {
 int arr[] = {-2, -4, 3, 5, 7};
 int n = arr.length;
 int first = arr[0];
 
 // Shift all elements one position left
 for (int i = 0; i < n-1; i++){
 arr[i] = arr[i+1];
 }
 arr[n-1] = first;
 
 for(int e : arr){
 System.out.print(" " + e);
 }
 }
}
Output: -4 3 5 7 -2
Move First Element to Last (With Swap)
class ArraySwapRotation {
 public static void main(String[] args) {
 int arr[] = {-2, -4, 3, 5, 7};
 int n = arr.length;
for (int i = 0; i < n-1; i++){
 int temp = arr[i];
 arr[i] = arr[i+1];
 arr[i+1] = temp;
 }
 for(int e : arr){
 System.out.print(" " + e);
 }
 }
}
Output: -4 3 5 7 -2
Move Last Element to First
class LastToFirst {
 public static void main(String[] args) {
 int arr[] = {-2, -4, 3, 5, 7};
 int n = arr.length;
 int last = arr[n-1];
 
 // Shift all elements one position right
 for (int i = n-1; i > 0; i--){
 arr[i] = arr[i-1];
 }
 arr[0] = last;
 
 for(int e : arr){
 System.out.print(" " + e);
 }
 }
}
Output: 7 -2 -4 3 5
Matrix Operations
Matrix Multiplication
import java.util.Scanner;
class MatrixMultiplication {
 public static void main(String[] args) {
 Scanner sc = new Scanner(System.in);
 
 System.out.print("Enter the Rows: ");
 int r = sc.nextInt();
 System.out.print("Enter the Columns: ");
 int c = sc.nextInt();
 
 int[][] a = new int[r][c];
 int[][] b = new int[r][c];
 int[][] result = new int[r][c];
 
 // Input for matrix A
 for(int i = 0; i < r; i++){
for(int j = 0; j < c; j++){
 System.out.print("Enter the ["+i+"]["+j+"] a matrix: ");
 a[i][j] = sc.nextInt();
 }
 }
 
 // Input for matrix B
 for(int i = 0; i < r; i++){
 for(int j = 0; j < c; j++){
 System.out.print("Enter the ["+i+"]["+j+"] b matrix: ");
 b[i][j] = sc.nextInt();
 }
 }
 
 // Matrix multiplication and display
 for(int i = 0; i < r; i++){
 for(int j = 0; j < c; j++){
 for(int k = 0; k < c; k++){
 result[i][j] += a[i][k] * b[k][j];
 }
 System.out.print(result[i][j] + " ");
 }
 System.out.println();
 }
 }
}
Sample Output:
Enter the Rows: 2
Enter the Columns: 2
Enter the [0][0] a matrix: 1
Enter the [0][1] a matrix: 2
Enter the [1][0] a matrix: 3
Enter the [1][1] a matrix: 4
Enter the [0][0] b matrix: 1
Enter the [0][1] b matrix: 2
Enter the [1][0] b matrix: 3
Enter the [1][1] b matrix: 4
7 10 
15 22

2D Arrays and Jagged Arrays
Regular 2D Array
class TwoDArray {
 public static void main(String[] args) {
 int a[][] = {
 {10, 20, 30},
 {40, 50, 60},
 {70, 80, 90}
};
 
 for (int i = 0; i < 3; i++) {
 for (int j = 0; j < 3; j++) {
 System.out.print(" " + a[i][j]);
 }
 System.out.println("");
 }
 }
}
Jagged Array (Irregular 2D Array)
class JaggedArray {
 public static void main(String[] args) {
 // Jagged array - rows can have different lengths
 int a[][] = {
 {10, 20, 30, 40}, // 4 elements
 {40, 50, 60}, // 3 elements
 {70, 80, 90, 50} // 4 elements
 };
 
 // Traditional nested loops
 for (int i = 0; i < a.length; i++) {
 for (int j = 0; j < a[i].length; j++) {
 System.out.print(" " + a[i][j]);
 }
 System.out.println("");
 }
 
 // Enhanced for loop version
 for(int[] row : a){
 for(int element : row) {
 System.out.print(" " + element);
 }
 System.out.println("");
 }
 }
}
