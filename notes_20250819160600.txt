08.19 3:15 PM
Day-4
Pattern 6: Continuous Number Triangle
Program:
class ContinuousNumbers {
 public static void main(String[] args) {
 int number = 1, i, j;
 
 for (i = 1; i <= 5; i++) {
 for (j = 1; j <= i; j++) {
 System.out.print(" " + number);
 number++;
 }
System.out.println("");
 }
 }
}
Output:
1
2 3
4 5 6
7 8 9 10
11 12 13 14 15

Pattern 7: Centered Number Triangle
Program:
import java.util.Scanner;
class CenteredTriangle {
 public static void main(String[] args) {
 System.out.println("Enter the number of rows : ");
 Scanner in = new Scanner(System.in);
 int n = in.nextInt();
 
 for (int i = 1; i <= n; i++) {
 // Print leading spaces for centering
 for (int k = 1; k <= (n - i); k++) {
 System.out.print(" ");
 }
 // Print numbers
 for (j = 1; j <= i; j++) {
 System.out.print(" " + i);
 }
 System.out.println("");
 }
 }
}
Sample Input/Output:
Enter the number of rows : 
5
 1
 2 2
 3 3 3
4 4 4 4
5 5 5 5 5

Pattern 8: Inverted Number Pyramid
Program:
import java.util.Scanner;
class InvertedPyramid {
 public static void main(String[] args) {
 System.out.println("Enter the number of rows : ");
 Scanner in = new Scanner(System.in);
 int n = in.nextInt();
 
 for (i = n; i >= 1; i--) {
 // Print leading spaces
 for (int k = 1; k <= (n - i); k++) {
 System.out.print(" ");
 }
 // Print numbers (2*i-1 times for pyramid effect)
 for (int j = 1; j <= 2 * i - 1; j++) {
 System.out.print(i);
 }
 System.out.println("");
 }
 }
}
Sample Input/Output:
Enter the number of rows : 
5
555555555
4444444
 33333
 222
 1
Important ASCII Values:
48-57 → 0-9 (Digits)
65-90 → A-Z (Uppercase Letters) 
97-122 → a-z (Lowercase Letters)
32 → Space character
import java.util.Scanner;
class vote {
 public static void main(String[] args) {
 int letter = 65, i, j,rows;
 System.out.println("Enter the number of rows : ");
 Scanner in = new Scanner(System.in);
 rows = in.nextInt();
 for (i = 0; i <= rows; i++) {
 for (j = 0; j <= i; j++) {
 System.out.print((char)(letter + j)+" ");
}
 System.out.println("");
 }
 }
}
output:
Enter the number of rows : 
5
A 
A B 
A B C 
A B C D 
A B C D E 
A B C D E F

